{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTiles.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","props","match","otherTeam","team1","teamName","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","teamMatches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","matches","setMatches","length","TeamTiles","HomePage","teams","setTeams","fetchTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yZAIaA,EAAkB,SAACC,GAC5B,IAAMC,EAAMD,EAAMC,MAClB,IAAIA,EAAO,OAAO,KAClB,IAAMC,EAAYD,EAAME,QAAUH,EAAMI,SAAWH,EAAMI,MAAQJ,EAAME,MACjEG,EAAc,iBAAaJ,GAC3BK,EAAaP,EAAMI,WAAWH,EAAMO,YAC1C,OACE,sBAAKC,UAAcF,EAAa,2BAA6B,4BAA7D,UACE,gCACA,sBAAME,UAAU,KAAhB,gBACA,6BAAI,cAAC,IAAD,CAAMC,GAAIJ,EAAV,SAA2BJ,MAC/B,oBAAIO,UAAU,aAAd,SAA4BR,EAAMU,OAClC,oBAAIF,UAAU,cAAd,SAA6BR,EAAMW,QACnC,qBAAIH,UAAU,eAAd,UAA8BR,EAAMO,YAApC,WAAyDP,EAAMY,aAA/D,IAA8EZ,EAAMa,aAEpF,sBAAKL,UAAU,oBAAf,UACA,+CACA,4BAAIR,EAAME,QACV,gDACA,4BAAIF,EAAMI,QACV,kDACA,4BAAIJ,EAAMc,gBACV,yCACA,8BAAId,EAAMe,QAAV,IAAoBf,EAAMgB,kBCvBrBC,G,MAAiB,SAAC,GAAsB,IAArBjB,EAAoB,EAApBA,MAAMG,EAAc,EAAdA,SAC9BF,EAAYD,EAAME,QAAUC,EAAWH,EAAMI,MAAQJ,EAAME,MAC3DG,EAAc,iBAAaJ,GAC3BK,EAAaH,IAAaH,EAAMO,YACpC,OACE,sBAAKC,UAAaF,EAAa,0BAA4B,2BAA3D,UACE,sCACA,6BAAI,cAAC,IAAD,CAAMG,GAAIJ,EAAV,SAA2BJ,MAC/B,8BAAID,EAAMO,YAAV,WAA+BP,EAAMY,aAArC,IAAoDZ,EAAMa,e,gBCLrDK,EAAW,WAEpB,MAAsBC,mBAAS,CAACC,YAAY,KAA5C,mBAAMC,EAAN,KAAWC,EAAX,KACQnB,EAAaoB,cAAbpB,SAaR,OAZAqB,qBACI,YACsB,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,GAAD,OAAIC,GAAJ,iBAA2CxB,IADtD,cACXyB,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBC,QAAQC,IAAIF,GACZR,EAAQQ,GAJS,2CAAH,qDAMlBG,KACA,CAAC9B,IAGLkB,GAASA,EAAKlB,SAIhB,sBAAKK,UAAU,WAAf,UAEE,qBAAKA,UAAU,oBAAf,SACE,oBAAIA,UAAU,WAAd,SAA0Ba,EAAKlB,aAEjC,sBAAKK,UAAU,mBAAf,0BAEA,cAAC,WAAD,CACIsB,KAAM,CACJ,CAAEI,MAAO,SAAUC,MAAOd,EAAKe,aAAef,EAAKgB,UAAWC,MAAO,WACrE,CAAEJ,MAAO,OAAQC,MAAOd,EAAKgB,UAAWC,MAAO,iBAIrD,sBAAK9B,UAAU,uBAAf,UACE,gDACA,cAAC,EAAD,CAAiBL,SAAUkB,EAAKlB,SAAUH,MAAOqB,EAAKD,YAAY,QAEnEC,EAAKD,YAAYmB,MAAM,GAAGC,KAAI,SAAAxC,GAAK,OAAI,cAAC,EAAD,CAAiCG,SAAUkB,EAAKlB,SAAUH,MAAOA,GAA3CA,EAAMyC,OACpE,qBAAKjC,UAAU,YAAf,SACA,cAAC,IAAD,CAAMC,GAAE,gBAAWN,EAAX,oBAA+BwB,QAAvC,yBAvBK,iDCpBAe,G,MAAa,SAAC,GAK3B,IAL0C,IAAdvC,EAAa,EAAbA,SACxBwC,EAAM,GAIFC,EAHUjB,OAGEiB,GAFJjB,OAEeiB,IAC3BD,EAAME,KAAKD,GAEX,OACI,oBAAIpC,UAAU,eAAd,SACKmC,EAAMH,KAAK,SAAAM,GAAI,OACZ,6BACI,cAAC,IAAD,CAAMrC,GAAE,gBAAWN,EAAX,oBAA+B2C,GAAvC,SAAiDA,KAD5CA,UCTZC,G,MAAY,WAErB,MAA4B5B,mBAAS,IAArC,mBAAM6B,EAAN,KAAcC,EAAd,KACA,EAA2B1B,cAAnBpB,EAAR,EAAQA,SAAS2C,EAAjB,EAAiBA,KAYb,OAXJtB,qBACI,YACsB,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,SAAD,OAAUvB,EAAV,yBAAmC2C,IAD9C,cACXlB,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBC,QAAQC,IAAIF,GACZmB,EAAWnB,GAJM,2CAAH,qDAMlBG,KACA,CAAC9B,EAAS2C,IAEXE,EAAQE,OAAO,EAEd,iEAKN,sBAAK1C,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,6CACE,cAAC,EAAD,CAAcL,SAAUA,OAE5B,gCACA,qBAAIK,UAAU,eAAd,UAA8BL,EAA9B,eAAoD2C,KAE5CE,EAAQR,KAAI,SAAAxC,GAAK,OAAI,cAAC,EAAD,CAAgCG,SAAUA,EAAUH,MAAOA,GAArCA,EAAMyC,eChCpDU,G,YAAW,SAACpD,GACrB,IAAMI,EAAWJ,EAAMI,SACvB,OACI,qBAAKK,UAAU,YAAf,SACG,eAAC,IAAD,CAAMC,GAAE,iBAAYN,GAApB,cAAiC,6BAAKA,WCJpCiD,EAAS,WAElB,MAAwBjC,mBAAS,IAAjC,mBAAMkC,EAAN,KAAYC,EAAZ,KAaA,OAZA9B,qBACI,YACoB,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,GAAD,OAAIC,GAAJ,UADb,cACTC,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfC,QAAQC,IAAIF,GACZwB,EAASxB,GAJM,2CAAH,qDAMhByB,KACA,IAIJ,sBAAK/C,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,iDAER,qBAAKA,UAAU,YAAf,SACM6C,EAAMb,KAAK,SAAAnB,GAAI,OAAI,cAAC,EAAD,CAA2BlB,SAAUkB,EAAKlB,UAAzBkB,EAAKoB,aCKxCe,MAvBf,WACE,OACE,qBAAKhD,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiD,KAAK,gCAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCTCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2be4e6de.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MatchDetailCard.scss';\n\nexport const MatchDetailCard = (props) => {\n    const match=props.match;\n    if(!match) return null;\n    const otherTeam = match.team1 === props.teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = props.teamName===match.matchWinner;\n    return (\n      <div className = { isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card' } >\n        <div>\n        <span className=\"vs\">vs</span>\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n        <h2 className=\"match-date\">{match.date}</h2>\n        <h3 className=\"match-venue\">{match.venue}</h3>\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n        </div>\n        <div className=\"additional-detail\">\n        <h3>First Innings</h3>\n        <p>{match.team1}</p>\n        <h3>Second Innings</h3>\n        <p>{match.team2}</p>\n        <h3>Man of the match</h3>\n        <p>{match.playerOfMatch}</p>\n        <h3>Umpires</h3>\n        <p>{match.umpire1},{match.umpire2}</p>\n\n        </div>\n      </div>\n    );\n  }\n  \n  ","import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MatchSmallCard.scss';\n\nexport const MatchSmallCard = ({match,teamName}) => {\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n    return (\n      <div className= { isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'} >\n        <span>vs</span> \n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n        <p>{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n      </div>\n    );\n  }\n  \n  ","import { React, useEffect, useState } from 'react';\nimport { useParams,Link} from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport './TeamPage.scss';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nexport const TeamPage = () => {\n\n    const[team,setTeam] = useState({teamMatches:[]});\n    const { teamName } = useParams();\n    useEffect(\n        ()=>{\n            const fetchMatches = async() => {\n                const response = await fetch(`${process.env.REACT_APP_ROOT_URL}/team/${teamName}`);\n                const data = await response.json();\n                console.log(data);\n                setTeam(data);\n            };\n            fetchMatches();\n        } , [teamName]\n    );\n\n    if(!team || !team.teamName){\n      return <h1>Team Not Found</h1>\n    }\n    return (\n      <div className=\"TeamPage\">\n        \n        <div className=\"team-name-section\">\n          <h1 className=\"teamName\">{team.teamName}</h1>\n        </div>\n        <div className=\"win-loss-section\">Wins / Losses\n        \n        <PieChart\n            data={[\n              { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n              { title: 'Wins', value: team.totalWins, color: '#4da375' },\n            ]}\n        />\n        </div>\n        <div className=\"match-detail-section\">\n          <h3>Latest Matches</h3>\n          <MatchDetailCard teamName={team.teamName} match={team.teamMatches[0]}/>\n          </div>\n        {team.teamMatches.slice(1).map(match => <MatchSmallCard key={ match.id } teamName={team.teamName} match={match} />)}\n        <div className=\"more-link\">\n        <Link to={`/team/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More &gt;</Link>\n        </div>\n      </div>\n    );\n  }\n  \n  ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './YearSelector.scss';\n\nexport const YearSelector=({teamName})=> {\nlet years=[];\nconst startYear = process.env.REACT_APP_DATA_START_YEAR;\nconst endYear = process.env.REACT_APP_DATA_END_YEAR;\n\nfor(let i=startYear;i<=endYear;i++){\n    years.push(i);\n}\n    return (\n        <ol className=\"YearSelector\">\n            {years.map (year=>\n                <li key={year}>\n                    <Link to={`/team/${teamName}/matches/${year}`}>{ year }</Link>\n                    </li>)}\n        </ol>\n    )\n}\n\n\n","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { YearSelector } from '../components/YearSelector';\nimport './MatchPage.scss';\n\nexport const MatchPage = () => {\n\n    const[matches,setMatches] = useState([]);\n    const { teamName,year }  = useParams();\n    useEffect(\n        ()=>{\n            const fetchMatches = async() => {\n                const response = await fetch(`/team/${teamName}/matches?year=${year}`);\n                const data = await response.json();\n                console.log(data);\n                setMatches(data);\n            };\n            fetchMatches();\n        } , [teamName,year]\n    );\n        if(matches.length<1){\n          return(\n            <h1>Data not found for this request</h1>\n          );\n            \n        }\n    return (\n      <div className=\"MatchPage\">\n        <div className=\"year-selector\">\n          <h3>Select Year</h3>\n            <YearSelector teamName={teamName}/>\n        </div>\n        <div>\n        <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n            {\n                matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\n            }\n        </div>\n      </div>\n    );\n  }\n  \n  ","import React from 'react';\nimport './TeamTiles.scss';\nimport { Link } from 'react-router-dom';\n\nexport const TeamTiles =(props)=> {\n    const teamName = props.teamName;\n    return (\n        <div className=\"TeamTiles\">\n           <Link to={`/teams/${teamName}`}> <h1>{teamName}</h1></Link>\n        </div>\n    )\n}\n\n\n","import { React, useEffect, useState } from 'react';\nimport './HomePage.scss';\nimport {TeamTiles} from '../components/TeamTiles.js';\n\nexport const HomePage=()=> {\n\n    const[teams,setTeams] = useState([]);\n    useEffect(\n        ()=>{\n            const fetchTeams = async() => {\n                const response = await fetch(`${process.env.REACT_APP_ROOT_URL}/team`);\n                const data = await response.json();\n                console.log(data);\n                setTeams(data);\n            };\n            fetchTeams();\n        } , []\n    );\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1>IPL DashBoard</h1>\n            </div>\n        <div className=\"team-grid\">\n            { teams.map( team => <TeamTiles key={ team.id } teamName={team.teamName} /> ) }\n            </div>\n        </div>\n    )\n}\n\n\n\n","import './App.scss';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n            <Route path=\"/team/:teamName/matches/:year\">\n              <MatchPage/>\n            </Route>\n\n            <Route path=\"/teams/:teamName\">\n              <TeamPage/>\n            </Route>\n\n            <Route path=\"/\">\n              <HomePage/>\n            </Route>\n\n        </Switch>\n      </Router>    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}